// BSLLS:DeprecatedMessage-off
// BSLLS:UsingHardcodePath-off
// МодульОбъектаОбработки: ws64_Шаблон
// Описание: Пример шаблона модуля для использования в будущих разработках
// Автор: [Ваше имя]
// Дата создания: [Дата, например, 2025-05-10]
// Дата версии: 2025-05-10
// Версия: v1.2
// Зависимости: НЕТ
//
// Доступные методы:
// - Статус() - Возвращает состояние объекта и список методов.
// - ПримерУстановки(НовоеЗначение) - Устанавливает/возвращает примерное значение.
// - ПримерДействия() - Выполняет примерное действие.

#Область ОписаниеПеременных

Перем ПримерПеременной; // Число - Пример переменной для хранения значения

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Возвращает статус объекта, включая состояние переменных и список методов с описанием.
// Возвращаемое значение:
//   Структура - Состояние объекта и методы.
Функция Статус() Экспорт
    Статус = Новый Структура;
    
    // Состояние переменных
    Статус.Вставить("Переменные", Новый Структура);
    Статус.Переменные.Вставить("ПримерПеременной", ПримерПеременной);
    
    // Список методов с описанием
    Статус.Вставить("Методы", Новый Структура);
    Статус.Методы.Вставить("Статус", "Возвращает состояние объекта и список методов.");
    Статус.Методы.Вставить("ПримерУстановки", "Устанавливает/возвращает примерное значение.");
    Статус.Методы.Вставить("ПримерДействия", "Выполняет примерное действие.");
    
    Возврат Статус;
КонецФункции

#Область Реквизиты

// Устанавливает или возвращает примерное значение.
// Параметры:
//   НовоеЗначение - Число, Null - Новое значение. Если Null, возвращается текущее значение.
// Возвращаемое значение:
//   Число - Текущее значение (если Null).
//   ЭтотОбъект - Для цепочки вызовов (если указано значение).
Функция ПримерУстановки(НовоеЗначение = Null) Экспорт
    Если НовоеЗначение = Null Тогда
        Возврат ПримерПеременной;
    КонецЕсли;
    Если ТипЗнч(НовоеЗначение) <> Тип("Число") Тогда
        ВызватьИсключение "Значение должно быть числом.";
    КонецЕсли;
    ПримерПеременной = НовоеЗначение;
    Возврат ЭтотОбъект;
КонецФункции

#КонецОбласти

#Область Методы

// Выполняет примерное действие с использованием переменной.
// Возвращаемое значение:
//   ЭтотОбъект - Для цепочки вызовов.
Функция ПримерДействия() Экспорт
    Сообщить("Выполнено действие с переменной: " + ПримерПеременной);
    Возврат ЭтотОбъект;
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Устанавливает значения по умолчанию для переменных.
Процедура ЗначенияПоУмолчанию()
    ПримерПеременной = 0;
КонецПроцедуры

#КонецОбласти

#Область Тесты

// Тесты для проверки корректности работы модуля
Процедура Тест() Экспорт
    Ошибки = Новый Массив;
    
    Тест1(Ошибки);
    Тест2(Ошибки);
    
    // Итоги тестирования
    Если Ошибки.Количество() = 0 Тогда
        Сообщить("ws64_Шаблон: Все тесты пройдены успешно");
    Иначе
        Сообщить("ws64_Шаблон: Обнаружены ошибки" + Символы.ПС + СтрСоединить(Ошибки, Символы.ПС));
    КонецЕсли;
КонецПроцедуры

// Тест 1: Проверка установки значения
// Параметры:
//   Ошибки - Массив - Массив для добавления описаний ошибок при неудачном тесте.
Процедура Тест1(Ошибки)
    Объект = Обработки.ws64_Шаблон.Создать()
        .ПримерУстановки(42);
    Если Объект.ПримерУстановки() <> 42 Тогда
        Ошибки.Добавить("Тест 1: Ошибка установки значения");
    КонецЕсли;
КонецПроцедуры

// Тест 2: Проверка метода Статус
// Параметры:
//   Ошибки - Массив - Массив для добавления описаний ошибок при неудачном тесте.
Процедура Тест2(Ошибки)
    Объект = Обработки.ws64_Шаблон.Создать()
        .ПримерУстановки(100);
    Статус = Объект.Статус();
    Если Статус.Переменные.ПримерПеременной <> 100
        Или Статус.Методы.Получить("ПримерУстановки") = Undefined Тогда
        Ошибки.Добавить("Тест 2: Ошибка в методе Статус");
    КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Примеры

// Пример использования модуля
Процедура ПримерИспользования() Экспорт
    Объект = Обработки.ws64_Шаблон.Создать()
        .ПримерУстановки(50)
        .ПримерДействия();
    
    Сообщить("Статус объекта:");
    Сообщить(Строка(Объект.Статус()));
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ЗначенияПоУмолчанию();

#КонецОбласти